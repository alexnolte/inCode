[
    [
        "auto-chatbot",
        "auto-building-a-declarative-chat-bot-with-implicit",
        false
    ],
    [
        "auto-chatbot",
        "auto-building-a-declarative-chatbot-with-implicit-serialization",
        true
    ],
    [
        "auto-intro",
        "introducing-the-auto-library",
        true
    ],
    [
        "auto-todo",
        "auto-a-todo-gui-application-with-auto-and",
        false
    ],
    [
        "auto-todo",
        "auto-a-todo-gui-application-with-auto-w",
        false
    ],
    [
        "auto-todo",
        "auto-a-todo-gui-application-with-auto-on",
        true
    ],
    [
        "blog-pp-fay",
        "blog-engine-updates-a-markdown-preprocessor-and-simple",
        false
    ],
    [
        "blog-pp-fay",
        "blog-engine-updates-markdown-preprocessor-fay-scripts",
        true
    ],
    [
        "chapman",
        "looking-forward-a-doctorate-program",
        true
    ],
    [
        "code-2013",
        "code-2013",
        true
    ],
    [
        "combinators-parsers",
        "functional-programming-is-awesome-parser-combinators",
        true
    ],
    [
        "control-intro",
        "an-introduction-to-control-theory",
        false
    ],
    [
        "control-intro",
        "hamster-hotel-an-introduction-to-control-theory",
        false
    ],
    [
        "control-intro",
        "the-hamster-hotel-an-introduction-to-control-theory",
        true
    ],
    [
        "control-intro-2",
        "the-hamster-hotel-an-introduction-to-control-theory-1",
        false
    ],
    [
        "control-intro-2",
        "the-hamster-hotel-an-introduction-to-control-theory-2",
        true
    ],
    [
        "entropy",
        "entropy-and-entropic-forces",
        true
    ],
    [
        "fc-statements",
        "first-class-statements",
        true
    ],
    [
        "firstpost",
        "introducing-in-code",
        true
    ],
    [
        "fixvec",
        "fixed-length-vector-types-in-haskell-2015",
        true
    ],
    [
        "free-random",
        "abstracting-over-sequential-random-algorithms-with-free",
        true
    ],
    [
        "haskell-composes",
        "an-open-list-of-was-to-compose-functions",
        false
    ],
    [
        "haskell-composes",
        "an-open-list-of-ways-to-compose-functions",
        false
    ],
    [
        "haskell-composes",
        "an-open-list-of-functions-to-compose-functions",
        true
    ],
    [
        "heroku-precompile",
        "deploying-large-haskell-apps-to-heroku-by-precompiling",
        false
    ],
    [
        "heroku-precompile",
        "deploying-medium-large-haskell-apps-to-heroku-by",
        false
    ],
    [
        "heroku-precompile",
        "deploying-medium-large-haskell-apps-to-heroku-via",
        false
    ],
    [
        "heroku-precompile",
        "deploying-medium-to-large-haskell-apps-to-heroku",
        true
    ],
    [
        "huffman-1",
        "implementing-huffman-compression-encoding-in-haskell",
        false
    ],
    [
        "huffman-1",
        "streaming-huffman-compression-in-haskell",
        false
    ],
    [
        "huffman-1",
        "streaming-huffman-compression-in-haskell-part-1",
        false
    ],
    [
        "huffman-1",
        "streaming-huffman-compression-in-haskell-part-1-trees",
        true
    ],
    [
        "huffman-2",
        "streaming-huffman-compression-in-haskell-part-2-binary",
        true
    ],
    [
        "huffman-3",
        "pipes-streaming-huffman-compression-in-haskell-part-3",
        true
    ],
    [
        "inside",
        "inside-my-world",
        false
    ],
    [
        "inside",
        "inside-my-world-or-why-i-love-functor",
        false
    ],
    [
        "inside",
        "inside-my-world-ode-to-functor-and-monad",
        true
    ],
    [
        "io-monad-harmful",
        "io-monad-considered-harmful",
        true
    ],
    [
        "io-purity",
        "the-compromise-less-reconciliation-of-i-o-and",
        false
    ],
    [
        "io-purity",
        "the-compromiseless-reconciliation-of-i-o-and-purity",
        true
    ],
    [
        "log-sh",
        "lightweight-command-line-note-logging-script",
        false
    ],
    [
        "log-sh",
        "log-sh-lightweight-command-line-note-logging",
        true
    ],
    [
        "machines-1",
        "intro-to-machines-arrows-part-1",
        false
    ],
    [
        "machines-1",
        "intro-to-machines-arrows-part-1-stream-and",
        true
    ],
    [
        "machines-2",
        "intro-to-machines-arrows-category-and-arrow-typeclasses",
        false
    ],
    [
        "machines-2",
        "intro-to-machines-arrows-the-category-typeclass-part",
        false
    ],
    [
        "machines-2",
        "auto-as-category-applicative-arrow-intro-to-machines",
        true
    ],
    [
        "machines-3",
        "from-auto-to-wire-continuous-time-intro-to",
        false
    ],
    [
        "machines-3",
        "going-kleisli-intro-to-machines-and-arrow-part",
        false
    ],
    [
        "machines-3",
        "effectful-arrows-intro-to-machines-and-arrow-part",
        false
    ],
    [
        "machines-3",
        "effectful-recursive-and-real-world-autos-intro-to",
        false
    ],
    [
        "machines-3",
        "effectful-recursive-real-world-autos-intro-to-machine",
        true
    ],
    [
        "monad-plus-1",
        "practical-fun-with-monads-monadplus-the-success-failure-1",
        false
    ],
    [
        "monad-plus-1",
        "practical-fun-with-monads-introducing-monadplus",
        true
    ],
    [
        "monad-plus-2",
        "practical-fun-with-monads-monadplus-the-success-failure",
        false
    ],
    [
        "monad-plus-2",
        "practical-fun-with-monads-the-list-monadplus",
        false
    ],
    [
        "monad-plus-2",
        "practical-fun-with-monads-the-list-monadplus-part",
        false
    ],
    [
        "monad-plus-2",
        "the-list-monadplus-practical-fun-with-monads-part",
        true
    ],
    [
        "monad-plus-3",
        "wolf-goat-cabbage-the-list-monadplus-and-logic",
        false
    ],
    [
        "monad-plus-3",
        "wolf-goat-cabbage-the-list-monadplus-logic-problems",
        true
    ],
    [
        "mtl",
        "mtl-is-not-a-transformer-library",
        false
    ],
    [
        "mtl",
        "mtl-is-not-a-monad-transformer-library",
        true
    ],
    [
        "multimonad",
        "a-non-unique-monad-instance",
        true
    ],
    [
        "pararrow",
        "a-semi-failed-project-an-arrow-based-data",
        false
    ],
    [
        "pararrow",
        "a-semi-failed-project-an-arrow-based-dataflow",
        false
    ],
    [
        "pararrow",
        "an-semi-failed-arrow-based-dataflow-parallelism-interface",
        false
    ],
    [
        "pararrow",
        "an-semi-dead-end-arrowized-dataflow-parallelism-interface",
        false
    ],
    [
        "pararrow",
        "a-semi-dead-end-arrowized-dataflow-parallelism-interface",
        false
    ],
    [
        "pararrow",
        "a-dead-end-arrowized-dataflow-parallelism-interface",
        false
    ],
    [
        "pararrow",
        "a-dead-end-arrowized-dataflow-parallelism-interface-attempt",
        true
    ],
    [
        "path-integral-intro",
        "the-quantum-mechanical-feynman-path-integral-problem",
        false
    ],
    [
        "path-integral-intro",
        "the-numeric-quantum-mechanical-feynman-path-integral-problem",
        false
    ],
    [
        "path-integral-intro",
        "numeric-techniques-quantum-mechanics-the-feynman-path-integral",
        false
    ],
    [
        "path-integral-intro",
        "numerical-techniques-a-brief-primer-on-path-integral",
        false
    ],
    [
        "path-integral-intro",
        "numerical-techniques-brief-primer-on-classical-and-quantum",
        false
    ],
    [
        "path-integral-intro",
        "a-brief-primer-on-classical-and-quantum-mechanics",
        true
    ],
    [
        "pptest",
        "preprocessor-tests",
        true
    ],
    [
        "prompt",
        "introducing-the-prompt-library",
        true
    ],
    [
        "send-more-money",
        "unique-sample-drawing-searches-with-list-and-statet",
        true
    ],
    [
        "shake1",
        "shake-task-automation-and-shell-scripting-in-haskell",
        false
    ],
    [
        "shake1",
        "shake-task-automation-and-scripting-in-haskell",
        true
    ]
]
